kind: pipeline
type: docker
name: build

concurrency:
  limit: 1

steps:
  - name: Restore cache
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      backend: "filesystem"
      restore: true
      cache_key: '{{ .Repo.Name }}_{{ checksum "package-lock.json" }}_{{ arch }}_{{ os }}'
      archive_format: "gzip"
      # filesystem_cache_root: "/tmp/cache"
      mount:
        - '.npm/'
        - '.next/cache'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: Install dependencies
    image: node:lts
    commands:
      - git config --global url."https://$${GITHUB_TOKEN}@github.com/".insteadOf ssh://git@github.com/
      - npm ci
    environment:
      GITHUB_TOKEN:
        from_secret: github_token

  - name: Build app
    image: node:lts
    commands:
      - npm run build
    environment:
      NEXT_PUBLIC_GA_ID:
        from_secret: ga_id
      NEXT_PUBLIC_CONTACT_FORM_URL:
        from_secret: contact_form_url
      NEXT_PUBLIC_SENTRY_DSN:
        from_secret: sentry_dns
      SENTRY_AUTH_TOKEN:
        from_secret: sentry_auth_token
      NEXT_PUBLIC_CF_TOKEN:
        from_secret: cf_token

  - name: Upload to bucket
    image: plugins/s3
    when:
      branch:
        - master
    settings:
      bucket: nabais.me
      source: build/**/*
      endpoint: http://minio:9000
      region: eu-west-1
      strip_prefix: build/
      path_style: true
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key

  - name: Tag release in Sentry
    image: getsentry/sentry-cli:latest
    when:
      branch:
        - master
    environment:
      SENTRY_AUTH_TOKEN:
        from_secret: sentry_auth_token
    commands:
      - ./docker/tag-sentry.sh

  - name: Store cache
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: '{{ .Repo.Name }}_{{ checksum "package-lock.json" }}_{{ arch }}_{{ os }}'
      archive_format: "gzip"
      # filesystem_cache_root: "/tmp/cache"
      mount:
        - '.npm/'
        - '.next/cache'
    volumes:
      - name: cache
        path: /tmp/cache

trigger:
  event:
    - push
    - custom

volumes:
  - name: cache
    host:
      path: /tmp/cache/
